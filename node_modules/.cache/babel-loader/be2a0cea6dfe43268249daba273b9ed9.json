{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\OGL-PROJECT\\\\OGL-PROJECT--main\\\\src\\\\components\\\\VehicleRegistration.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { Route, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Redirect } from \"react\";\nimport VehicleRegistrationForm from './VehicleRegistrationForm';\nimport ContainerRegistration from './ContainerRegistration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VEHICLE_REGISTRATION = localStorage.getItem('vehicles') ? JSON.parse(localStorage.getItem('vehicles')) : [];\n\nfunction VehicleRegistration(props) {\n  _s();\n\n  const [vehicles, setVehicles] = useState(VEHICLE_REGISTRATION);\n  const [trackingID, setTrackingID] = useState('');\n  const [vehicleNumber, setVehicleNumber] = useState('');\n  const [driver, setDriver] = useState('');\n  let location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  const handleTrackingID = event => {\n    console.log('TrackingID', event.target.value);\n    setTrackingID(event.target.value);\n  };\n\n  const handleVehicle = event => {\n    console.log('VehicleNumber', event.target.value);\n    setVehicleNumber(event.target.value);\n  };\n\n  const handleDriver = event => {\n    console.log('Driver', event.target.value);\n    setDriver(event.target.value);\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    if (driver !== '' && vehicleNumber !== '') {\n      //single vehicle object\n      const vehicle = {\n        trackingID,\n        driver,\n        vehicleNumber\n      }; //using spread operator to access previous values \n\n      setVehicles([...vehicles, vehicle]); //CLEAN INPUT FIELD\n\n      setTrackingID('');\n      setDriver('');\n      setVehicleNumber('');\n    } else {\n      console.log('Invalid input details');\n    }\n  };\n\n  const handleRedirect = event => {\n    event.preventDefault();\n\n    if (localStorage.getItem('vehicles') !== null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/registercontainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/addtrackingid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('vehicles', JSON.stringify(vehicles));\n  }, [vehicles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VehicleRegistrationForm, {\n      trackingID: trackingID,\n      vehicleNumber: vehicleNumber,\n      driver: driver,\n      handleTrackingID: handleTrackingID,\n      handleVehicle: handleVehicle,\n      handleDriver: handleDriver,\n      handleSubmitForm: handleSubmitForm,\n      handleRedirect: handleRedirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: ({\n        location\n      }) => localStorage.getItem(\"vehicles\") ? console.log(2) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VehicleRegistration, \"eq6cOKDbgj4LW9kVgbEI11Wj7q8=\", false, function () {\n  return [useLocation];\n});\n\n_c = VehicleRegistration;\nexport default VehicleRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"VehicleRegistration\");","map":{"version":3,"sources":["C:/Users/USER/Downloads/OGL-PROJECT/OGL-PROJECT--main/src/components/VehicleRegistration.js"],"names":["Header","Sidebar","Route","useLocation","useState","useEffect","Redirect","VehicleRegistrationForm","ContainerRegistration","VEHICLE_REGISTRATION","localStorage","getItem","JSON","parse","VehicleRegistration","props","vehicles","setVehicles","trackingID","setTrackingID","vehicleNumber","setVehicleNumber","driver","setDriver","location","from","state","pathname","handleTrackingID","event","console","log","target","value","handleVehicle","handleDriver","handleSubmitForm","preventDefault","vehicle","handleRedirect","setItem","stringify","rest"],"mappings":"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","sourcesContent":["import '../App.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport {Route, useLocation} from 'react-router-dom'\r\nimport { useState, useEffect, Redirect } from \"react\";\r\nimport VehicleRegistrationForm from './VehicleRegistrationForm';\r\nimport ContainerRegistration from './ContainerRegistration';\r\nconst VEHICLE_REGISTRATION = localStorage.getItem('vehicles')\r\n    ? JSON.parse(localStorage.getItem('vehicles'))\r\n    : []\r\n\r\nfunction VehicleRegistration(props) {\r\n\r\n    const [vehicles, setVehicles] = useState(VEHICLE_REGISTRATION)\r\n    const [trackingID, setTrackingID] = useState('')\r\n    const [vehicleNumber, setVehicleNumber] = useState('')\r\n    const [driver, setDriver] = useState('')\r\n    let location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n    const handleTrackingID = event => {\r\n        console.log('TrackingID', event.target.value)\r\n        setTrackingID(event.target.value)\r\n    }\r\n\r\n    const handleVehicle = event => {\r\n        console.log('VehicleNumber', event.target.value)\r\n        setVehicleNumber(event.target.value)\r\n    }\r\n    const handleDriver = event => {\r\n        console.log('Driver', event.target.value)\r\n        setDriver(event.target.value)\r\n    }\r\n    const handleSubmitForm = event => {\r\n        event.preventDefault()\r\n        if (driver !== '' && vehicleNumber !== '') {\r\n            //single vehicle object\r\n            const vehicle = { trackingID, driver, vehicleNumber }\r\n            //using spread operator to access previous values \r\n            setVehicles([...vehicles, vehicle])\r\n\r\n            //CLEAN INPUT FIELD\r\n            setTrackingID('')\r\n            setDriver('')\r\n            setVehicleNumber('')\r\n        } else {\r\n            console.log('Invalid input details')\r\n        }\r\n\r\n    }\r\n    const handleRedirect = event => {\r\n        event.preventDefault()\r\n        if (localStorage.getItem('vehicles') !== null) {\r\n\r\n            return (\r\n                <Redirect to=\"/registercontainer\" />)\r\n\r\n\r\n        } else {\r\n            <Redirect to=\"/addtrackingid\" />\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        localStorage.setItem('vehicles', JSON.stringify(vehicles))\r\n    }, [vehicles])\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Header />\r\n\r\n            <VehicleRegistrationForm\r\n                trackingID={trackingID}\r\n                vehicleNumber={vehicleNumber}\r\n                driver={driver}\r\n                handleTrackingID={handleTrackingID}\r\n                handleVehicle={handleVehicle}\r\n                handleDriver={handleDriver}\r\n                handleSubmitForm={handleSubmitForm}\r\n                handleRedirect={handleRedirect}\r\n            />\r\n            <Route\r\n                {...rest}\r\n                render={({ location }) =>\r\n                    localStorage.getItem(\"vehicles\") ? (\r\n                       console.log(2)\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default VehicleRegistration"]},"metadata":{},"sourceType":"module"}